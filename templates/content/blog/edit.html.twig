{% extends 'base.html.twig' %}

{% block title %}Modifier - {{ blog.titleOne }} - Blog INFPF{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        :root {
            --primary-color: #0b3f89;
            --secondary-color: #1e40af;
            --accent-color: #3b82f6;
            --light-gray: #f8fafc;
            --border-radius: 12px;
            --box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            color: #1e293b;
            line-height: 1.7;
        }

        .blog-form-container {
            max-width: 1000px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .form-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .form-title {
            font-size: 2.5rem;
            font-weight: 800;
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
        }

        .form-subtitle {
            color: #64748b;
            font-size: 1.1rem;
        }

        .current-article-info {
            background: linear-gradient(135deg, #fef3c7, #fde68a);
            border: 1px solid #f59e0b;
            padding: 1.5rem;
            border-radius: var(--border-radius);
            margin-bottom: 3rem;
            text-align: center;
        }

        .current-article-title {
            font-weight: 700;
            color: #92400e;
            margin-bottom: 0.5rem;
        }

        .current-article-meta {
            color: #a16207;
            font-size: 0.9rem;
        }

        .blog-form {
            background: white;
            border-radius: var(--border-radius);
            padding: 3rem;
            box-shadow: var(--box-shadow);
            margin-bottom: 2rem;
        }

        .form-section {
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e2e8f0;
        }

        .form-section:last-child {
            margin-bottom: 0;
            padding-bottom: 0;
            border-bottom: none;
        }

        .section-title {
            font-size: 1.3rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
        }

        .form-control {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            transition: var(--transition);
            font-family: inherit;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .form-textarea {
            min-height: 120px;
            resize: vertical;
        }

        .form-textarea-large {
            min-height: 200px;
        }

        .current-image-preview {
            background: var(--light-gray);
            padding: 1.5rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            text-align: center;
        }

        .current-image {
            max-width: 200px;
            max-height: 150px;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .current-image-text {
            color: #64748b;
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .file-input-container {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .file-input {
            width: 100%;
            padding: 1rem;
            border: 2px dashed #cbd5e1;
            border-radius: 8px;
            background: var(--light-gray);
            text-align: center;
            transition: var(--transition);
            cursor: pointer;
        }

        .file-input:hover {
            border-color: var(--accent-color);
            background: rgba(59, 130, 246, 0.05);
        }

        .form-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid #e2e8f0;
        }

        .btn {
            padding: 1rem 2rem;
            border-radius: 8px;
            font-weight: 600;
            text-decoration: none;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            border: none;
            cursor: pointer;
            font-family: inherit;
            font-size: 1rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(11, 63, 137, 0.3);
        }

        .btn-secondary {
            background: #6b7280;
            color: white;
        }

        .btn-secondary:hover {
            background: #4b5563;
            transform: translateY(-2px);
            color: white;
            text-decoration: none;
        }

        .btn-danger {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            color: white;
        }

        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);
        }

        .form-help {
            font-size: 0.9rem;
            color: #64748b;
            margin-top: 0.5rem;
            font-style: italic;
        }

        .danger-zone {
            background: linear-gradient(135deg, #fef2f2, #fee2e2);
            border: 1px solid #fca5a5;
            border-radius: var(--border-radius);
            padding: 2rem;
            margin-top: 3rem;
        }

        .danger-zone-title {
            color: #dc2626;
            font-weight: 700;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .danger-zone-text {
            color: #991b1b;
            margin-bottom: 1.5rem;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .blog-form-container {
                margin: 1rem auto;
                padding: 0 0.5rem;
            }

            .blog-form {
                padding: 2rem;
            }

            .form-title {
                font-size: 2rem;
            }

            .form-group-row {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .form-actions {
                flex-direction: column;
            }
        }

        /* Form validation styles */
        .form-control.is-invalid {
            border-color: #ef4444;
        }

        .invalid-feedback {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="blog-form-container">
        <div class="form-header">
            <h1 class="form-title">Modifier l'Article</h1>
            <p class="form-subtitle">Mettez √† jour le contenu et les informations de votre article</p>
        </div>

        <div class="current-article-info">
            <div class="current-article-title">Article en cours de modification</div>
            <div class="current-article-meta">
                {% if blog.publishedAt %}
                    Publi√© le {{ blog.publishedAt|date('d F Y') }}
                {% endif %}
                {% if blog.author %} | Par {{ blog.author }}{% endif %}
            </div>
        </div>

        {{ form_start(form, {'attr': {'class': 'blog-form', 'enctype': 'multipart/form-data'}}) }}
            
            <div class="form-section">
                <h2 class="section-title">üìù Informations principales</h2>
                
                <div class="form-group">
                    {{ form_label(form.title_one, 'Titre principal *', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.title_one, {'attr': {'class': 'form-control', 'placeholder': 'Entrez le titre principal de l\'article...'}}) }}
                    <div class="form-help">Ce titre appara√Ætra en en-t√™te de l'article et dans la liste des actualit√©s</div>
                </div>

                <div class="form-group">
                    {{ form_label(form.shortDesc, 'Description courte', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.shortDesc, {'attr': {'class': 'form-control form-textarea', 'placeholder': 'R√©digez une description courte qui appara√Ætra dans la liste des articles...'}}) }}
                    <div class="form-help">Cette description appara√Ætra comme aper√ßu dans la liste des articles (recommand√©: 150-200 caract√®res)</div>
                </div>

                <div class="form-group-row">
                    <div class="form-group">
                        {{ form_label(form.author, 'Auteur', {'attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.author, {'attr': {'class': 'form-control', 'placeholder': 'Nom de l\'auteur'}}) }}
                    </div>
                </div>

                <!-- Section Publication -->
                <div class="publication-section">
                    <h3 style="color: var(--primary-color); margin-bottom: 1.5rem;">
                        üìÖ Param√®tres de publication
                        <span class="current-status-badge">
                            {% if blog.isDraft %}
                                <span class="badge bg-secondary">üìù {{ blog.statusLabel }}</span>
                            {% elseif blog.isScheduled %}
                                <span class="badge bg-warning text-dark">‚è∞ {{ blog.statusLabel }}</span>
                            {% else %}
                                <span class="badge bg-success">‚úÖ {{ blog.statusLabel }}</span>
                            {% endif %}
                        </span>
                    </h3>
                    
                    <div class="form-group">
                        {{ form_label(form.status, 'Statut de publication *', {'attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.status, {'attr': {'class': 'form-control publication-status-select'}}) }}
                        <div class="publication-status-help"></div>
                    </div>
                    
                    <div class="form-group">
                        <div class="publication-date-container">
                            {{ form_label(form.publishedAt, 'Date et heure de publication', {'attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.publishedAt, {'attr': {'class': 'form-control publication-date-field'}}) }}
                            <div class="form-help">
                                üí° <strong>Conseil :</strong> Pour un article programm√©, choisissez une date dans le futur. 
                                L'article sera automatiquement visible √† cette date.
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    {{ form_label(form.image, 'Image de l\'article', {'attr': {'class': 'form-label'}}) }}
                    
                    {% if blog.image %}
                    <div class="current-image-preview">
                        <div class="current-image-text">Image actuelle :</div>
                        <img src="{{ asset('uploads/images/' ~ blog.image) }}" alt="Image actuelle" class="current-image">
                    </div>
                    {% endif %}
                    
                    <div class="file-input-container">
                        {{ form_widget(form.image, {'attr': {'class': 'file-input'}}) }}
                    </div>
                    <div class="form-help">
                        {% if blog.image %}
                            Laissez vide pour conserver l'image actuelle. S√©lectionnez un nouveau fichier pour la remplacer.
                        {% else %}
                            Formats accept√©s: JPG, PNG, WebP. Taille recommand√©e: 1200x600px
                        {% endif %}
                    </div>
                </div>
            </div>

            <div class="form-section">
                <h2 class="section-title">üìÑ Contenu principal</h2>
                
                <div class="form-group">
                    {{ form_label(form.content_one, 'Contenu principal *', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.content_one, {'attr': {'class': 'form-control form-textarea-large', 'placeholder': 'R√©digez le contenu principal de votre article...'}}) }}
                    <div class="form-help">Le contenu principal de votre article. Vous pouvez utiliser des retours √† la ligne pour structurer le texte.</div>
                </div>
            </div>

            <div class="form-section">
                <h2 class="section-title">üìã Sections additionnelles (optionnel)</h2>
                
                <div class="form-group">
                    {{ form_label(form.title_two, 'Titre de la 2√®me section', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.title_two, {'attr': {'class': 'form-control', 'placeholder': 'Titre de la deuxi√®me section...'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.content_two, 'Contenu de la 2√®me section', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.content_two, {'attr': {'class': 'form-control form-textarea', 'placeholder': 'Contenu de la deuxi√®me section...'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.title_tree, 'Titre de la 3√®me section', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.title_tree, {'attr': {'class': 'form-control', 'placeholder': 'Titre de la troisi√®me section...'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.content_tree, 'Contenu de la 3√®me section', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.content_tree, {'attr': {'class': 'form-control form-textarea', 'placeholder': 'Contenu de la troisi√®me section...'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.title_for, 'Titre de la 4√®me section', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.title_for, {'attr': {'class': 'form-control', 'placeholder': 'Titre de la quatri√®me section...'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.content_for, 'Contenu de la 4√®me section', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.content_for, {'attr': {'class': 'form-control form-textarea', 'placeholder': 'Contenu de la quatri√®me section...'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.title_five, 'Titre de la 5√®me section', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.title_five, {'attr': {'class': 'form-control', 'placeholder': 'Titre de la cinqui√®me section...'}}) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.content_five, 'Contenu de la 5√®me section', {'attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.content_five, {'attr': {'class': 'form-control form-textarea', 'placeholder': 'Contenu de la cinqui√®me section...'}}) }}
                </div>

                <!-- Sections dynamiques -->
                <div class="dynamic-sections-container">
                    <h3 style="color: var(--primary-color); margin-top: 2rem; margin-bottom: 1rem;">
                        Sections suppl√©mentaires (optionnel)
                    </h3>
                    <div id="dynamic-sections">
                        {% for section in blog.dynamicSections %}
                            <div class="dynamic-section" data-section="{{ section.id }}">
                                <div class="dynamic-section-header">
                                    <h4>Section suppl√©mentaire {{ loop.index }}</h4>
                                    <button type="button" class="btn-remove-section" data-section-id="{{ section.id }}">
                                        ‚ùå Supprimer
                                    </button>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Titre de la section</label>
                                    <input type="text" name="dynamic_sections[{{ section.id }}][title]" 
                                           class="form-control" value="{{ section.title }}" placeholder="Titre de la section..." />
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Contenu de la section</label>
                                    <textarea name="dynamic_sections[{{ section.id }}][content]" 
                                              class="form-control form-textarea" rows="5" 
                                              placeholder="Contenu de la section...">{{ section.content }}</textarea>
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                    <button type="button" id="add-section-btn" class="btn-add-section" onclick="addSectionManual()">
                        ‚ûï Ajouter une section
                    </button>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    ‚úÖ Sauvegarder les modifications
                </button>
                <a href="{{ path('blog_show', {'id': blog.id}) }}" class="btn btn-secondary">
                    üëÅÔ∏è Voir l'article
                </a>
                <a href="{{ path('app_blog_index') }}" class="btn btn-secondary">
                    ‚ùå Annuler
                </a>
            </div>

        {{ form_end(form) }}

        <!-- Zone de danger -->
        <div class="danger-zone">
            <h3 class="danger-zone-title">
                ‚ö†Ô∏è Zone de danger
            </h3>
            <p class="danger-zone-text">
                La suppression de cet article est d√©finitive et ne peut pas √™tre annul√©e. 
                Tous les commentaires associ√©s seront √©galement supprim√©s.
            </p>
            <form method="post" action="{{ path('blog_delete', {'id': blog.id}) }}" onsubmit="return confirm('√ätes-vous absolument s√ªr de vouloir supprimer cet article ? Cette action est irr√©versible.');">
                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ blog.id) }}">
                <button type="submit" class="btn btn-danger">
                    üóëÔ∏è Supprimer d√©finitivement l'article
                </button>
            </form>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        // Fonction de secours pour ajouter une section manuellement
        function addSectionManual() {
            console.log('üéØ Admin Debug - Fonction manuelle appel√©e !');
            
            // R√©cup√©rer le compteur actuel et les √©l√©ments
            let currentSections = document.querySelectorAll('.dynamic-section').length;
            let newSectionNumber = currentSections + 1;
            
            const container = document.getElementById('dynamic-sections');
            if (!container) {
                alert('‚ùå Erreur: Container non trouv√©');
                return;
            }
            
            const sectionHtml = `
                <div class="dynamic-section" data-section="new_${newSectionNumber}">
                    <div class="dynamic-section-header">
                        <h4>Section suppl√©mentaire ${newSectionNumber}</h4>
                        <button type="button" class="btn-remove-section" onclick="this.closest('.dynamic-section').remove()">
                            ‚ùå Supprimer
                        </button>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Titre de la section</label>
                        <input type="text" name="dynamic_sections[new_${newSectionNumber}][title]" 
                               class="form-control" placeholder="Titre de la section..." />
                    </div>
                    <div class="form-group">
                        <label class="form-label">Contenu de la section</label>
                        <textarea name="dynamic_sections[new_${newSectionNumber}][content]" 
                                  class="form-control form-textarea" rows="5" 
                                  placeholder="Contenu de la section..."></textarea>
                    </div>
                </div>
            `;
            
            container.insertAdjacentHTML('beforeend', sectionHtml);
            console.log('‚úÖ Admin Debug - Nouvelle section ajout√©e avec succ√®s !');
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Character count for short description
            const shortDescInput = document.querySelector('textarea[name="blog[shortDesc]"]');
            
            if (shortDescInput) {
                shortDescInput.addEventListener('input', updateCharCount);
                updateCharCount(); // Initial check
            }
            
            function updateCharCount() {
                const shortDesc = shortDescInput.value;
                const charCount = shortDesc.length;
                const recommended = charCount >= 150 && charCount <= 200;
                
                // Add visual feedback for optimal length
                if (recommended) {
                    shortDescInput.style.borderColor = '#10b981';
                } else if (charCount > 200) {
                    shortDescInput.style.borderColor = '#f59e0b';
                } else {
                    shortDescInput.style.borderColor = '#e2e8f0';
                }
            }

            // File input enhancement
            const fileInput = document.querySelector('input[type="file"]');
            if (fileInput) {
                fileInput.addEventListener('change', function(e) {
                    const file = e.target.files[0];
                    if (file) {
                        const fileName = file.name;
                        const fileSize = (file.size / 1024 / 1024).toFixed(2);
                        console.log(`Nouveau fichier s√©lectionn√©: ${fileName} (${fileSize} MB)`);
                    }
                });
            }

            // Form validation enhancement
            const form = document.querySelector('.blog-form');
            if (form) {
                form.addEventListener('submit', function(e) {
                    const titleInput = document.querySelector('input[name="blog[title_one]"]');
                    const contentInput = document.querySelector('textarea[name="blog[content_one]"]');
                    
                    if (!titleInput.value.trim()) {
                        e.preventDefault();
                        titleInput.focus();
                        alert('Le titre principal est obligatoire');
                        return false;
                    }
                    
                    if (!contentInput.value.trim()) {
                        e.preventDefault();
                        contentInput.focus();
                        alert('Le contenu principal est obligatoire');
                        return false;
                    }
                });
            }

            // Dynamic sections functionality
            let sectionCounter = {{ blog.dynamicSections|length }};
            const dynamicSectionsContainer = document.getElementById('dynamic-sections');
            const addSectionBtn = document.getElementById('add-section-btn');
            
            // Debug logs
            console.log('üîß Admin Debug - Section counter:', sectionCounter);
            console.log('üîß Admin Debug - Dynamic sections container:', dynamicSectionsContainer);
            console.log('üîß Admin Debug - Add section button:', addSectionBtn);

            // Attacher les event listeners aux boutons de suppression existants
            document.querySelectorAll('.btn-remove-section').forEach(function(button) {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const sectionElement = this.closest('.dynamic-section');
                    console.log('Suppression de section existante:', sectionElement?.dataset.section);
                    if (sectionElement) {
                        sectionElement.remove();
                    }
                });
            });

            // V√©rifier si le bouton existe avant d'ajouter l'event listener
            if (addSectionBtn && dynamicSectionsContainer) {
                console.log('‚úÖ Admin Debug - Bouton et container trouv√©s, ajout de l\'event listener');
                
                addSectionBtn.addEventListener('click', function() {
                    console.log('üéØ Admin Debug - Bouton "Ajouter section" cliqu√© !');
                    sectionCounter++;
                    const sectionHtml = `
                    <div class="dynamic-section" data-section="new_${sectionCounter}">
                        <div class="dynamic-section-header">
                            <h4>Section suppl√©mentaire ${sectionCounter + {{ blog.dynamicSections|length }} + 1}</h4>
                            <button type="button" class="btn-remove-section" data-section-id="new_${sectionCounter}">
                                ‚ùå Supprimer
                            </button>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Titre de la section</label>
                            <input type="text" name="dynamic_sections[new_${sectionCounter}][title]" 
                                   class="form-control" placeholder="Titre de la section..." />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Contenu de la section</label>
                            <textarea name="dynamic_sections[new_${sectionCounter}][content]" 
                                      class="form-control form-textarea" rows="5" 
                                      placeholder="Contenu de la section..."></textarea>
                        </div>
                    </div>
                `;
                dynamicSectionsContainer.insertAdjacentHTML('beforeend', sectionHtml);

                // Ajouter l'event listener au nouveau bouton de suppression
                const newSection = dynamicSectionsContainer.lastElementChild;
                const removeBtn = newSection.querySelector('.btn-remove-section');
                removeBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    console.log('Suppression de nouvelle section:', sectionCounter);
                    newSection.remove();
                });
                });
            } else {
                console.error('‚ùå Admin Debug - √âl√©ments manquants:', {
                    addSectionBtn: !!addSectionBtn,
                    dynamicSectionsContainer: !!dynamicSectionsContainer
                });
                
                // Tentative de fallback apr√®s un d√©lai
                setTimeout(function() {
                    console.log('üîÑ Admin Debug - Tentative de fallback...');
                    const fallbackBtn = document.getElementById('add-section-btn');
                    const fallbackContainer = document.getElementById('dynamic-sections');
                    
                    if (fallbackBtn && fallbackContainer) {
                        console.log('‚úÖ Admin Debug - Fallback r√©ussi, ajout de l\'event listener');
                        fallbackBtn.addEventListener('click', function() {
                            console.log('üéØ Admin Debug - Bouton cliqu√© via fallback !');
                            location.reload(); // Rechargement temporaire pour test
                        });
                    } else {
                        console.error('‚ùå Admin Debug - Fallback √©chou√©, √©l√©ments toujours manquants');
                    }
                }, 1000);
            }
        });
    </script>

    <style>
        .btn-add-section {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 8px;
            cursor: pointer;
            display: block;
            visibility: visible;
            opacity: 1;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 1rem;
        }

        .btn-add-section:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
        }

        .dynamic-section {
            background: #f8fafc;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            position: relative;
        }

        .dynamic-section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #cbd5e1;
        }

        .dynamic-section-header h4 {
            color: var(--primary-color);
            margin: 0;
            font-size: 1.1rem;
        }

        .btn-remove-section {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-remove-section:hover {
            transform: scale(1.05);
        }

        .dynamic-sections-container {
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 2px solid #e2e8f0;
        }

        .publication-date-field {
            transition: all 0.3s ease;
        }

        .publication-date-container {
            margin-top: 1rem;
            padding: 1rem;
            background-color: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #007bff;
        }

        .publication-date-container.hidden {
            display: none;
        }

        .publication-status-help {
            font-size: 0.875rem;
            margin-top: 0.5rem;
            padding: 0.5rem;
            border-radius: 4px;
        }

        .status-draft .publication-status-help {
            background-color: #e9ecef;
            color: #6c757d;
        }

        .status-published .publication-status-help {
            background-color: #d1e7dd;
            color: #0f5132;
        }

        .status-scheduled .publication-status-help {
            background-color: #fff3cd;
            color: #664d03;
        }

        .current-status-badge {
            font-size: 0.75rem;
            margin-left: 1rem;
        }

        .publication-section {
            background-color: #f8f9fa;
            padding: 2rem;
            border-radius: 12px;
            border: 1px solid #dee2e6;
            margin-bottom: 2rem;
        }
    </style>

    <script>
        function togglePublicationDate(status) {
            const dateContainer = document.querySelector('.publication-date-container');
            const dateField = document.querySelector('#blog_publishedAt');
            const statusHelp = document.querySelector('.publication-status-help');
            
            if (!dateContainer || !dateField || !statusHelp) {
                console.warn('√âl√©ments du formulaire non trouv√©s pour togglePublicationDate');
                return;
            }
            
            const formGroup = dateContainer.closest('.form-group');

            // Retirer toutes les classes de statut
            formGroup.classList.remove('status-draft', 'status-published', 'status-scheduled');

            switch(status) {
                case 'draft':
                    dateContainer.style.display = 'none';
                    dateField.removeAttribute('required');
                    dateField.disabled = true; // D√©sactiver pour √©viter les erreurs de validation
                    formGroup.classList.add('status-draft');
                    statusHelp.innerHTML = 'üìù Cet article sera sauvegard√© comme brouillon et ne sera pas visible publiquement.';
                    break;
                    
                case 'published':
                    dateContainer.style.display = 'block';
                    dateField.removeAttribute('required');
                    dateField.disabled = false;
                    formGroup.classList.add('status-published');
                    statusHelp.innerHTML = '‚úÖ Cet article sera publi√© imm√©diatement. Laissez la date vide pour utiliser maintenant.';
                    break;
                    
                case 'scheduled':
                    dateContainer.style.display = 'block';
                    dateField.setAttribute('required', 'required');
                    dateField.disabled = false;
                    formGroup.classList.add('status-scheduled');
                    statusHelp.innerHTML = '‚è∞ Choisissez une date et heure dans le futur. L\'article sera publi√© automatiquement.';
                    
                    // D√©finir la date minimum √† maintenant + 1 minute
                    const now = new Date();
                    now.setMinutes(now.getMinutes() + 1);
                    const minDate = now.toISOString().slice(0, 16);
                    dateField.setAttribute('min', minDate);
                    
                    // Si pas de date d√©finie ou date dans le pass√©, sugg√©rer demain √† 9h
                    if (!dateField.value || new Date(dateField.value) <= now) {
                        const tomorrow = new Date();
                        tomorrow.setDate(tomorrow.getDate() + 1);
                        tomorrow.setHours(9, 0, 0, 0);
                        dateField.value = tomorrow.toISOString().slice(0, 16);
                    }
                    break;
            }
        }

        // Initialiser l'√©tat au chargement de la page
        document.addEventListener('DOMContentLoaded', function() {
            const statusSelect = document.querySelector('#blog_status');
            if (statusSelect) {
                togglePublicationDate(statusSelect.value);
            }
        });
    </script>
{% endblock %}
